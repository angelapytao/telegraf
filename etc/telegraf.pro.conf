#agent配置
[agent]
# #默认的数据(input)采集间隔时间
interval = "10s"
# 采用轮询时间间隔。默认是使用interval里面的值进行轮询，比如interval = "10s",那采集时间将是:00, :10, :20, 等
round_interval = true
# 每次发送到output的度量大小不能超过metric_batch_size的值
metric_batch_size = 1000
# telegraf会为每一个output去缓存一份度量值，metric_buffer_limit为缓存的限制，并且刷新buffer以确定成功写入。如果达到这个限制了，老的数据会被第一时间丢弃
# 当然了，增加这个值能够容忍更多的数据连接，但是这也将会增加telegraf潜在的内存占用。这个值可以大于metric_batch_size但是必须小于它的两倍
metric_buffer_limit = 10000
# 通过随机度量来对采集时间进行抖动。每个插件在采集数据之前将会有一个随机时间的休眠，但是这个时间应小于collection_jitter
# 这个设置是为了防止多个采集源数据同一时间都在队列
collection_jitter = "0s"
# 默认所有数据flush到outputs的时间(在数据被flush到output之前，最大能到flush_interval + flush_jitter)。不能低于interval
flush_interval = "10s"
# 通过随机数来对flush间隔进行抖动。这个主要是为了避免当运行一个大的telegraf实例的时候有比较大的写入。(jitter=5s,flush_interval=10s意味着每10-15s会发生一次flush操作)
flush_jitter = "5s"
#默认这个值被设置相同的时间戳通过采集间隔排序。最大值为1s。这个指标一般不会用在service input(比如logparser和statsd)。单位(ns,us,ms,s)
precision = "s"
#以debug模式运行
debug = false
#以安静模式运行
quiet = false
#这个将会覆盖默认的hostname，如果为空的话，将会采用os.Hostname()
hostname = ""
#如果设置为true，就不允许在telegraf agent里面设置"host"标签了
omit_hostname = false
# 如果设置为true, 自动获取本机IP地址作为 hostname
use_localIp_as_host = true

[[inputs.cpu]]
  percpu = false
  totalcpu = true
  fielddrop = ["time*","usage_guest*"]

[[inputs.processes]]
  fielddrop = ["wait","idle","unknown"]

[[inputs.system]]
  fielddrop = ["uptime","uptime_format"]

[[inputs.mem]]
  fieldpass = ["available*", "free", "total", "used*","buffered","cached"]

[[inputs.diskio]]
  fieldpass = ["io_time", "read_time", "write_time"]
  name_override = "diskio_time"

[[inputs.diskio]]
  fieldpass = ["read_bytes", "reads", "write_bytes", "writes"]

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.net]]
  fieldpass = ["packets_*","bytes_*","drop_*","err_*"]

[[inputs.netstat]]
  fielddrop = ["tcp_none","tcp_closing","tcp_close*"]

[[inputs.exec2]]
  timeout = "5s"
  gather_err_retry_interval = "120s"
  data_format = "value"
  data_type = "string" # required
  pattern = "/bin/sh -c \"sudo netstat -anp|grep LISTEN|grep '\\<%s\\>' |awk '{print $7}'|awk -F '/' '{print $1}'\""
  url =  "http://insight-console.xsyxsc.com/insight-metric-console/telegraf"
  name_override = "listen_port"

[[processors.rename]]
  namepass = ["cpu"]
  [[processors.rename.replace]]
    field = "usage_idle"
    dest = "idle"
  [[processors.rename.replace]]
    field = "usage_iowait"
    dest = "iowait"
  [[processors.rename.replace]]
    field = "usage_irq"
    dest = "irq"
  [[processors.rename.replace]]
    field = "usage_nice"
    dest = "nice"
  [[processors.rename.replace]]
    field = "usage_softirq"
    dest = "softirq"
  [[processors.rename.replace]]
    field = "usage_steal"
    dest = "steal"
  [[processors.rename.replace]]
    field = "usage_system"
    dest = "system"
  [[processors.rename.replace]]
    field = "usage_user"
    dest = "user"
  [[processors.rename.replace]]
    field = "usage_other"
    dest = "other"
  [[processors.rename.replace]]
    field = "usage_total"
    dest = "total"

[[aggregators.basicstats]]
  namepass = ["net", "diskio"]
  period = "30s"
  drop_original = true
  stats = ["count","diff","rate"]

[[outputs.exec2]]
  flush_interval="10ms"
  namepass=["http_listener_v2"]

[[outputs.kafka]]
  namepass = ["cpu"]
  brokers = ["insight.kafka.sys.xsyx.xyz:9092"]
  topic = "insight-sys-cpu"
  routing_tag = "host"
  data_format = "json"
  json_timestamp_units = "1s"

[[outputs.kafka]]
  namepass = ["system"]
  brokers = ["insight.kafka.sys.xsyx.xyz:9092"]
  topic = "insight-sys-system"
  routing_tag = "host"
  data_format = "json"
  json_timestamp_units = "1s"

[[outputs.kafka]]
  namepass = ["mem"]
  brokers = ["insight.kafka.sys.xsyx.xyz:9092"]
  topic = "insight-sys-mem"
  routing_tag = "host"
  data_format = "json"
  json_timestamp_units = "1s"

[[outputs.kafka]]
  namepass = ["diskio"]
  brokers = ["insight.kafka.sys.xsyx.xyz:9092"]
  topic = "insight-sys-diskio"
  routing_tag = "host"
  data_format = "json"
  json_timestamp_units = "1s"

[[outputs.kafka]]
  namepass = ["diskio_time"]
  brokers = ["insight.kafka.sys.xsyx.xyz:9092"]
  topic = "insight-sys-diskioTime"
  routing_tag = "host"
  data_format = "json"
  json_timestamp_units = "1s"

[[outputs.kafka]]
  namepass = ["disk"]
  brokers = ["insight.kafka.sys.xsyx.xyz:9092"]
  topic = "insight-sys-disk"
  routing_tag = "host"
  data_format = "json"
  json_timestamp_units = "1s"

[[outputs.kafka]]
  namepass = ["net"]
  brokers = ["insight.kafka.sys.xsyx.xyz:9092"]
  topic = "insight-sys-net"
  routing_tag = "host"
  data_format = "json"
  json_timestamp_units = "1s"

[[outputs.kafka]]
  namepass = ["netstat"]
  brokers = ["insight.kafka.sys.xsyx.xyz:9092"]
  topic = "insight-sys-netstat"
  routing_tag = "host"
  data_format = "json"
  json_timestamp_units = "1s"

[[outputs.kafka]]
  namepass = ["processes"]
  brokers = ["insight.kafka.sys.xsyx.xyz:9092"]
  topic = "insight-sys-processes"
  routing_tag = "host"
  data_format = "json"
  json_timestamp_units = "1s"

[[outputs.kafka]]
  namepass = ["listen_port"]
  brokers = ["insight.kafka.sys.xsyx.xyz:9092"]
  topic = "insight-sys-port"
  routing_tag = "host"
  data_format = "json"
  json_timestamp_units = "1s"